<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bot Admin Dashboard</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        @media (max-width: 768px) {
            .responsive-table thead {display: none;}
            .responsive-table tbody, .responsive-table tr, .responsive-table td {display: block;width: 100%;}
            .responsive-table tr {margin-bottom: 1rem;border: 1px solid #e2e8f0;border-radius: 0.75rem;overflow: hidden;}
            .responsive-table td {display: flex;justify-content: space-between;align-items: center;text-align: right;padding: 0.75rem 1rem;border-bottom: 1px solid #edf2f7;}
            .responsive-table td::before {content: attr(data-label);font-weight: 600;text-align: left;margin-right: 1rem;color: #4a5568;}
        }
    </style>
</head>
<body class="bg-slate-100 text-slate-800">

    <div class="container mx-auto p-4 md:p-8">
        <header class="flex flex-wrap justify-between items-center mb-8 gap-4">
            <div>
                <h1 class="text-3xl font-bold text-slate-800" id="header-bot-name">üõ°Ô∏è Admin Dashboard</h1>
                <p class="text-slate-500">Panel kontrol real-time untuk bot Anda.</p>
            </div>
            <div class="text-sm text-slate-500" id="status-text">Menunggu update...</div>
        </header>

        <div class="grid grid-cols-1 lg:grid-cols-3 gap-8 mb-8">
             <div class="lg:col-span-1 space-y-8">
                <div class="p-6 bg-white rounded-xl shadow-lg">
                    <h2 class="text-xl font-semibold mb-4 border-b pb-2">üö¶ Status Bot</h2>
                    <div class="flex items-center space-x-3 mb-4"><span id="status-dot" class="status-dot bg-gray-400"></span><span id="status-label" class="font-medium text-lg">Inisialisasi...</span></div>
                </div>
                <div id="qr-code-container" class="text-center p-4 bg-white border-2 border-dashed rounded-xl shadow-lg hidden">
                    <p class="mb-2 font-semibold">Silakan Scan QR Code untuk Login</p>
                    <img id="qr-code-image" src="" alt="QR Code" class="mx-auto w-full max-w-xs">
                </div>
            </div>
            <div class="lg:col-span-2 p-6 bg-white rounded-xl shadow-lg" id="anon-status-section"></div>
        </div>

        <div class="mb-8 p-6 bg-white rounded-xl shadow-lg">
            <h2 class="text-xl font-semibold mb-4 border-b pb-2 flex items-center">üì£ Kirim Pesan Broadcast</h2>
            <form id="broadcast-form">
                <div class="mb-4">
                    <label for="broadcast-message" class="block text-sm font-medium text-slate-600 mb-1">Tulis pesan Anda di sini:</label>
                    <textarea name="message" id="broadcast-message" rows="4" class="w-full p-2 border border-gray-300 rounded-md shadow-sm focus:border-indigo-500 focus:ring-indigo-500" placeholder="Contoh: Halo semua, bot akan offline untuk maintenance."></textarea>
                </div>
                <button type="submit" id="broadcast-button" class="w-full inline-flex justify-center items-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700">
                    <span id="button-text">Kirim ke Semua Pengguna Aktif</span>
                    <svg id="button-spinner" class="animate-spin ml-2 h-5 w-5 text-white hidden" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg>
                </button>
                <p class="mt-3 text-xs text-rose-600">‚ö†Ô∏è **Peringatan:** Gunakan dengan hati-hati. Risiko nomor diblokir.</p>
                <div id="broadcast-progress-section" class="mt-4 hidden">
                    <div class="text-sm font-medium text-slate-700 mb-1" id="progress-text">Mengirim...</div>
                    <div class="w-full bg-gray-200 rounded-full h-2.5"><div id="progress-bar" class="bg-blue-600 h-2.5 rounded-full" style="width: 0%"></div></div>
                </div>
                <div id="broadcast-status" class="mt-3 text-sm text-green-700 font-semibold"></div>
            </form>
        </div>

        <div>
            <div class="mb-4 border-b border-gray-200">
                <nav class="-mb-px flex space-x-8" aria-label="Tabs">
                    <button onclick="changeTab('users')" class="tab-button border-indigo-500 text-indigo-600 whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm">Manajemen User</button>
                    <button onclick="changeTab('violations')" class="tab-button border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm">Log Pelanggaran</button>
                    <button onclick="changeTab('logs')" class="tab-button border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm">Aktivitas Bot</button>
                </nav>
            </div>
            <div id="users-content" class="tab-content bg-white rounded-lg shadow-lg overflow-hidden"></div>
            <div id="violations-content" class="tab-content bg-white rounded-lg shadow-lg overflow-hidden hidden"></div>
            <div id="logs-content" class="tab-content bg-slate-800 text-white font-mono text-xs rounded-b-lg shadow-lg hidden"></div>
        </div>
    </div>

    <div id="chat-modal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center hidden z-50 p-4">
        <div class="bg-white rounded-lg shadow-xl w-full sm:w-11/12 md:w-1/2 max-h-[80vh] flex flex-col">
            <div class="p-4 border-b flex justify-between items-center"><h2 class="text-xl font-bold" id="modal-room-id"></h2><button onclick="closeModal()" class="text-gray-500 hover:text-gray-800 text-3xl">&times;</button></div>
            <div class="p-4 overflow-y-auto" id="modal-chat-content"></div>
        </div>
    </div>

    <script>
        const updateInterval = 5000;
        let cachedData = {};

        function changeTab(tabName) {
            ['users', 'violations', 'logs'].forEach(tab => {
                document.getElementById(`${tab}-content`).classList.add('hidden');
                const button = document.querySelector(`button[onclick="changeTab('${tab}')"]`);
                button.classList.remove('border-indigo-500', 'text-indigo-600');
                button.classList.add('border-transparent', 'text-gray-500');
            });
            document.getElementById(`${tabName}-content`).classList.remove('hidden');
            document.querySelector(`button[onclick="changeTab('${tabName}')"]`).classList.add('border-indigo-500', 'text-indigo-600');
        }

        function renderBotStatus(status, qrCode) {
            const dot = document.getElementById('status-dot');
            const label = document.getElementById('status-label');
            const qrContainer = document.getElementById('qr-code-container');
            const qrImage = document.getElementById('qr-code-image');

            dot.className = 'status-dot';
            if (status === 'CONNECTED') {
                dot.classList.add('bg-green-500');
                label.textContent = 'Terhubung';
                qrContainer.classList.add('hidden');
            } else if (status === 'WAITING_FOR_QR_SCAN') {
                dot.classList.add('bg-yellow-500');
                label.textContent = 'Menunggu Scan QR...';
                if (qrCode) {
                    qrImage.src = qrCode;
                    qrContainer.classList.remove('hidden');
                }
            } else if (status === 'DISCONNECTED') {
                dot.classList.add('bg-red-500');
                label.textContent = 'Terputus';
                qrContainer.classList.add('hidden');
            } else {
                dot.classList.add('bg-gray-400');
                label.textContent = 'Inisialisasi...';
                qrContainer.classList.add('hidden');
            }
        }
        
        function renderServerLogs(logs) {
            const container = document.getElementById('logs-content');
            let logHTML = `<div class="p-4 h-96 overflow-y-auto">`;
            logs.slice().reverse().forEach(log => {
                logHTML += `<div><span class="text-green-400">${log.timestamp}:</span><span class="text-slate-300"> ${log.message}</span></div>`;
            });
            logHTML += `</div>`;
            container.innerHTML = logHTML;
        }

        function renderAnonStatus(data) {
            const container = document.getElementById('anon-status-section');
            let statusHTML = `<h2 class="text-xl font-semibold mb-4 border-b pb-2">üíû Status Anonymous Chat</h2>
                <div class="grid md:grid-cols-2 gap-6">
                    <div><h3 class="font-bold mb-2">üë• Menunggu Partner (${data.waiting.length})</h3><div class="text-gray-600 h-32 overflow-y-auto bg-gray-50 p-3 rounded-lg">${data.waiting.length > 0 ? data.waiting.map(u => `<div>- ${u.nickname}</div>`).join('') : '<div class="text-gray-400">Tidak ada yang menunggu...</div>'}</div></div>
                    <div><h3 class="font-bold mb-2">üí¨ Room Aktif (${data.active.length})</h3><div class="text-gray-600 h-32 overflow-y-auto bg-gray-50 p-3 rounded-lg">${data.active.length > 0 ? data.active.map(p => `<div>- <a href="#" onclick="showChatLog('${p.roomId}')" class="text-blue-500 hover:underline font-semibold">${p.roomId}</a>: ${p.user1} ‚Üî ${p.user2}</div>`).join('') : '<div class="text-gray-400">Tidak ada yang aktif...</div>'}</div></div>
                </div>`;
            container.innerHTML = statusHTML;
        }

        function renderUserTable(users) {
            const container = document.getElementById('users-content');
            let tableHTML = `<div class="overflow-x-auto"><table class="w-full text-sm text-left text-gray-500 responsive-table"><thead class="bg-gray-50 text-xs uppercase text-gray-700"><tr><th class="px-6 py-3">Nickname</th><th class="px-6 py-3">Status</th><th class="px-6 py-3 text-center">Aksi</th></tr></thead><tbody>`;
            users.forEach(user => {
                const isBannedClass = user.isBanned ? 'bg-rose-50' : '';
                const statusBadge = user.isBanned ? `<span class="px-2 py-1 text-xs font-semibold text-white bg-rose-500 rounded-full">Banned</span>` : `<span class="px-2 py-1 text-xs font-semibold text-white bg-teal-500 rounded-full">Aktif</span>`;
                const banButton = user.isBanned ? `<button type="submit" class="px-3 py-1 bg-sky-500 text-white text-xs rounded-md hover:bg-sky-600">Unban</button>` : `<button type="submit" class="px-3 py-1 bg-rose-500 text-white text-xs rounded-md hover:bg-rose-600">Ban</button>`;
                tableHTML += `<tr class="border-b hover:bg-gray-50 ${isBannedClass}"><td data-label="Nickname" class="px-6 py-4 font-medium text-gray-900">${user.nickname}<span class="text-gray-500 text-xs block">${user.id.split('@')[0]}</span></td><td data-label="Status" class="px-6 py-4">${statusBadge}</td><td data-label="Aksi" class="px-6 py-4 flex items-center justify-end md:justify-center"><form action="/toggle-ban" method="POST" class="contents"><input type="hidden" name="userId" value="${user.id}">${banButton}</form></td></tr>`;
            });
            tableHTML += `</tbody></table></div>`;
            container.innerHTML = tableHTML;
        }

        function renderViolationTable(violations) {
            const container = document.getElementById('violations-content');
            let tableHTML = `<h2 class="text-xl font-semibold p-4 border-b">üö´ Log Pelanggaran</h2><div class="overflow-x-auto"><table class="w-full text-sm text-left text-gray-500 responsive-table"><thead class="bg-gray-50 text-xs uppercase text-gray-700"><tr><th class="px-6 py-3">Waktu</th><th class="px-6 py-3">Tipe</th><th class="px-6 py-3">Pelaku/Pelapor</th><th class="px-6 py-3">Detail</th></tr></thead><tbody>`;
            violations.slice().reverse().forEach((v, index) => {
                let reporterInfo = v.type === 'Laporan Pengguna' ? `<div class="font-bold text-red-600">Pelapor: ${v.reporter.nickname}</div><div class="text-gray-500">Terlapor: ${v.reported.nickname}</div>` : `<div class="font-bold">${v.nickname}</div>`;
                let detailInfo = v.type === 'Laporan Pengguna' ? `<button onclick="showReportedChat(${violations.length - 1 - index})" class="text-blue-500 hover:underline">Lihat Chat</button>` : `<span class="text-red-600">${v.message}</span>`;
                tableHTML += `<tr class="border-b hover:bg-gray-50"><td data-label="Waktu" class="px-6 py-4 text-gray-500 whitespace-nowrap">${v.timestamp}</td><td data-label="Tipe" class="px-6 py-4 font-semibold">${v.type}</td><td data-label="Pelaku/Pelapor" class="px-6 py-4">${reporterInfo}</td><td data-label="Detail" class="px-6 py-4">${detailInfo}</td></tr>`;
            });
            tableHTML += `</tbody></table></div>`;
            container.innerHTML = tableHTML;
        }

        const modal = document.getElementById('chat-modal');
        async function showChatLog(roomId) {
            document.getElementById('modal-room-id').textContent = `Isi Chat Room: ${roomId}`;
            const contentDiv = document.getElementById('modal-chat-content');
            contentDiv.innerHTML = 'Memuat chat...';
            modal.classList.remove('hidden');
            try {
                const response = await fetch(`/api/chatlog/${roomId}`);
                const logData = await response.json();
                let chatHTML = '<div class="space-y-2">';
                logData.forEach(chat => { chatHTML += `<div><span class="font-bold text-blue-600">${chat.nickname}:</span> ${chat.message} <span class="text-xs text-gray-400 float-right">${chat.timestamp.split(' ')[1]}</span></div>`; });
                chatHTML += '</div>';
                contentDiv.innerHTML = chatHTML;
            } catch (error) { contentDiv.innerHTML = 'Gagal memuat log chat.'; }
        }

        function showReportedChat(violationIndex) {
            const violation = cachedData.violations.slice().reverse()[violationIndex];
            document.getElementById('modal-room-id').textContent = `Bukti Laporan Room: ${violation.roomId}`;
            const contentDiv = document.getElementById('modal-chat-content');
            let chatHTML = '<div class="space-y-2">';
            (violation.chatHistory || []).forEach(chat => {
                let colorClass = 'text-gray-800';
                if (violation.reporter && chat.userId === violation.reporter.id) colorClass = 'text-green-600';
                if (violation.reported && chat.userId === violation.reported.id) colorClass = 'text-red-600';
                chatHTML += `<div><span class="font-bold ${colorClass}">${chat.nickname}:</span> ${chat.message}</div>`;
            });
            chatHTML += '</div>';
            contentDiv.innerHTML = chatHTML;
            modal.classList.remove('hidden');
        }

        function closeModal() { modal.classList.add('hidden'); }

        async function updateAllData() {
            try {
                const response = await fetch('/api/status');
                if (!response.ok) throw new Error('Gagal mengambil data dari server.');
                const data = await response.json();

                if (JSON.stringify(data) !== JSON.stringify(cachedData)) {
                    cachedData = data;
                    renderAnonStatus(data);
                    renderUserTable(data.users);
                    renderViolationTable(data.violations);
                }
                
                renderBotStatus(data.botStatus, data.qrCode);
                renderServerLogs(data.serverLogs);

                document.getElementById('status-text').textContent = `Data diperbarui pada: ${new Date().toLocaleTimeString('id-ID')}`;
            } catch (error) {
                console.error("Gagal update data:", error);
                document.getElementById('status-text').textContent = "Gagal memuat data.";
                renderBotStatus('DISCONNECTED', '');
            }
        };

        const broadcastForm = document.getElementById('broadcast-form');
        const broadcastButton = document.getElementById('broadcast-button');
        const buttonText = document.getElementById('button-text');
        const buttonSpinner = document.getElementById('button-spinner');
        const broadcastStatusDiv = document.getElementById('broadcast-status');
        const progressSection = document.getElementById('broadcast-progress-section');
        const progressBar = document.getElementById('progress-bar');
        const progressText = document.getElementById('progress-text');
        
        broadcastForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            const message = document.getElementById('broadcast-message').value;
            if (!message || message.trim() === '') return;
            
            broadcastStatusDiv.textContent = '';
            buttonText.textContent = 'Mengirim...';
            buttonSpinner.classList.remove('hidden');
            broadcastButton.disabled = true;

            try {
                const response = await fetch('/broadcast', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                    body: `message=${encodeURIComponent(message)}`
                });
                const resultText = await response.text();
                broadcastStatusDiv.textContent = resultText;
                document.getElementById('broadcast-message').value = '';
                setTimeout(() => { broadcastStatusDiv.textContent = ''; }, 7000);
            } catch (error) {
                broadcastStatusDiv.textContent = "Gagal mengirim broadcast.";
            }
        });
        
        async function updateBroadcastStatus() {
            try {
                const response = await fetch('/api/broadcast-status');
                const status = await response.json();
                if (status.isRunning) {
                    progressSection.classList.remove('hidden');
                    const percent = status.total > 0 ? (status.progress / status.total) * 100 : 0;
                    progressBar.style.width = `${percent}%`;
                    progressText.textContent = `Mengirim ke ${status.currentUser} (${status.progress}/${status.total})...`;
                    buttonText.textContent = 'Mengirim...';
                    buttonSpinner.classList.remove('hidden');
                    broadcastButton.disabled = true;
                } else {
                    if (cachedData?.broadcast?.isRunning) { // Jika baru saja selesai
                         progressText.textContent = `Broadcast Selesai!`;
                    } else {
                        progressSection.classList.add('hidden');
                    }
                    buttonText.textContent = 'Kirim ke Semua Pengguna Aktif';
                    buttonSpinner.classList.add('hidden');
                    broadcastButton.disabled = false;
                }
            } catch(e) { /* abaikan error kecil */ }
        }

        updateAllData();
        setInterval(updateAllData, updateInterval);
        setInterval(updateBroadcastStatus, 2000); // Cek status broadcast lebih sering
    </script>
</body><!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bot Admin Dashboard</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body { font-family: 'Poppins', sans-serif; }
        @media (max-width: 768px) {
            .responsive-table thead { display: none; }
            .responsive-table tbody, .responsive-table tr, .responsive-table td { display: block; width: 100%; }
            .responsive-table tr { margin-bottom: 1rem; background-color: rgba(255, 255, 255, 0.05); border-radius: 0.75rem; overflow: hidden; }
            .responsive-table td { display: flex; justify-content: space-between; align-items: center; text-align: right; padding: 0.75rem 1rem; border-bottom: 1px solid rgba(255, 255, 255, 0.1); }
            .responsive-table td::before { content: attr(data-label); font-weight: 600; text-align: left; margin-right: 1rem; color: #cbd5e1; }
        }
        .glass-card {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }
    </style>
</head>
<body class="bg-gradient-to-br from-slate-900 to-blue-900 text-slate-200">

    <div class="container mx-auto p-4 md:p-8">
        <header class="flex flex-wrap justify-between items-center mb-8 gap-4">
            <div>
                <h1 class="text-3xl font-bold text-white" id="header-bot-name">üõ°Ô∏è Admin Dashboard</h1>
                <p class="text-slate-400">Panel kontrol real-time untuk bot Anda.</p>
            </div>
            <div class="text-sm text-slate-300" id="status-text">Menunggu update...</div>
        </header>

        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6 mb-8" id="stat-cards-container"></div>
        <div id="anon-status-section" class="mb-8 p-6 glass-card rounded-xl shadow-lg"></div>
        
        <div>
            <div class="mb-4 border-b border-white/20">
                <nav class="-mb-px flex space-x-4 sm:space-x-8 overflow-x-auto" aria-label="Tabs">
                    <button onclick="changeTab('users')" class="tab-button border-indigo-400 text-white whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm">Manajemen User</button>
                    <button onclick="changeTab('rank')" class="tab-button border-transparent text-slate-400 hover:text-white hover:border-gray-300 whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm">Peringkat</button>
                    <button onclick="changeTab('violations')" class="tab-button border-transparent text-slate-400 hover:text-white hover:border-gray-300 whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm">Log Pelanggaran</button>
                    <button onclick="changeTab('settings')" class="tab-button border-transparent text-slate-400 hover:text-white hover:border-gray-300 whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm">Pengaturan Bot</button>
                </nav>
            </div>

            <div id="users-content" class="tab-content glass-card rounded-lg shadow-lg overflow-hidden"></div>
            <div id="rank-content" class="tab-content glass-card rounded-lg shadow-lg overflow-hidden hidden"></div>
            <div id="violations-content" class="tab-content glass-card rounded-lg shadow-lg overflow-hidden hidden"></div>
            <div id="settings-content" class="tab-content glass-card rounded-lg shadow-lg p-6 hidden"></div>
        </div>
    </div>

    <div id="chat-modal" class="fixed inset-0 bg-black bg-opacity-70 flex items-center justify-center hidden z-50 p-4">
        <div class="glass-card rounded-lg shadow-xl w-full sm:w-11/12 md:w-1/2 max-h-[80vh] flex flex-col text-slate-200">
            <div class="p-4 border-b border-white/20 flex justify-between items-center"><h2 class="text-xl font-bold" id="modal-room-id"></h2><button onclick="closeModal()" class="text-slate-300 hover:text-white text-3xl">&times;</button></div>
            <div class="p-4 overflow-y-auto" id="modal-chat-content"></div>
        </div>
    </div>

    <script>
        const updateInterval = 5000;
        let cachedData = {};

        function changeTab(tabName) {
            ['users', 'rank', 'violations', 'settings'].forEach(tab => {
                document.getElementById(`${tab}-content`).classList.add('hidden');
                document.querySelector(`button[onclick="changeTab('${tab}')"]`).classList.remove('border-indigo-400', 'text-white');
                document.querySelector(`button[onclick="changeTab('${tab}')"]`).classList.add('border-transparent', 'text-slate-400');
            });
            document.getElementById(`${tabName}-content`).classList.remove('hidden');
            document.querySelector(`button[onclick="changeTab('${tabName}')"]`).classList.add('border-indigo-400', 'text-white');
        }

        function renderStatCards(data) {
            const container = document.getElementById('stat-cards-container');
            container.innerHTML = `
                <div class="glass-card p-6 rounded-xl shadow-lg flex items-center space-x-4"><div class="bg-blue-500/20 p-3 rounded-full"><i class="fa-solid fa-users fa-lg text-blue-300"></i></div><div><p class="text-sm text-slate-400">Total Pengguna</p><p class="text-2xl font-bold text-white">${data.users.length}</p></div></div>
                <div class="glass-card p-6 rounded-xl shadow-lg flex items-center space-x-4"><div class="bg-teal-500/20 p-3 rounded-full"><i class="fa-solid fa-hourglass-half fa-lg text-teal-300"></i></div><div><p class="text-sm text-slate-400">Dalam Antrian</p><p class="text-2xl font-bold text-white">${data.waiting.length}</p></div></div>
                <div class="glass-card p-6 rounded-xl shadow-lg flex items-center space-x-4"><div class="bg-indigo-500/20 p-3 rounded-full"><i class="fa-solid fa-comments fa-lg text-indigo-300"></i></div><div><p class="text-sm text-slate-400">Room Aktif</p><p class="text-2xl font-bold text-white">${data.active.length}</p></div></div>
                <div class="glass-card p-6 rounded-xl shadow-lg flex items-center space-x-4"><div class="bg-rose-500/20 p-3 rounded-full"><i class="fa-solid fa-user-slash fa-lg text-rose-300"></i></div><div><p class="text-sm text-slate-400">Total Pelanggaran</p><p class="text-2xl font-bold text-white">${data.violations.length}</p></div></div>`;
        }
        
        function renderAnonStatus(data) {
            const container = document.getElementById('anon-status-section');
            statusHTML = `<h2 class="text-xl font-semibold mb-4 border-b border-white/20 pb-2 text-white flex items-center"><i class="fa-solid fa-circle-nodes mr-3 text-sky-400"></i>Status Anonymous Chat</h2><div class="grid md:grid-cols-2 gap-6"><div class="bg-white/5 p-4 rounded-lg">
                <h3 class="font-bold mb-2 text-slate-300 flex items-center"><i class="fa-solid fa-hourglass-half mr-2"></i> Menunggu Partner (${data.waiting.length})</h3>
                <div class="text-slate-200 h-32 overflow-y-auto p-1 text-sm">${data.waiting.length > 0 ? data.waiting.map(u => `<div>- ${u.nickname}</div>`).join('') : '<div class="text-slate-400">Antrian kosong...</div>'}</div></div>
                <div class="bg-white/5 p-4 rounded-lg"><h3 class="font-bold mb-2 text-slate-300 flex items-center"><i class="fa-solid fa-comments mr-2"></i> Room Aktif (${data.active.length})</h3>
                <div class="text-slate-200 h-32 overflow-y-auto p-1 text-sm">${data.active.length > 0 ? data.active.map(p => `<div>- <a href="#" onclick="showChatLog('${p.roomId}')" class="text-sky-400 hover:underline font-semibold">${p.roomId}</a>: ${p.user1} ‚Üî ${p.user2}</div>`).join('') : '<div class="text-slate-400">Tidak ada room aktif...</div>'}</div></div></div>`;
            container.innerHTML = statusHTML;
        }

        function renderUserTable(users) {
            const container = document.getElementById('users-content');
            let tableHTML = `<div class="overflow-x-auto"><table class="w-full text-sm text-left text-slate-300 responsive-table"><thead class="bg-white/5 text-xs uppercase text-slate-400"><tr><th class="px-6 py-3">Nickname</th><th class="px-6 py-3">XP</th><th class="px-6 py-3">Tier</th><th class="px-6 py-3">Status</th><th class="px-6 py-3 text-center">Aksi</th></tr></thead><tbody>`;
            users.forEach(user => {
                const isBannedClass = user.isBanned ? 'bg-rose-500/20' : '';
                const statusBadge = user.isBanned ? `<span class="px-2 py-1 text-xs font-semibold text-white bg-rose-500 rounded-full">Banned</span>` : `<span class="px-2 py-1 text-xs font-semibold text-white bg-teal-500 rounded-full">Aktif</span>`;
                const banButton = user.isBanned ? `<button type="submit" class="px-3 py-1 bg-sky-500 text-white text-xs rounded-md hover:bg-sky-600">Unban</button>` : `<button type="submit" class="px-3 py-1 bg-rose-500 text-white text-xs rounded-md hover:bg-rose-600">Ban</button>`;
                tableHTML += `<tr class="border-b border-white/10 hover:bg-white/5 ${isBannedClass}"><td data-label="Nickname" class="px-6 py-4 font-medium text-white">${user.nickname}<span class="text-slate-400 text-xs block">${user.id.split('@')[0]}</span></td>
                    <form action="/update-user" method="POST" class="contents"><input type="hidden" name="userId" value="${user.id}">
                        <td data-label="XP" class="px-6 py-4"><input type="number" name="xp" value="${user.xp}" class="w-20 p-1 border rounded bg-slate-700 border-slate-600 text-white"></td>
                        <td data-label="Tier" class="px-6 py-4 font-semibold text-white">${user.tier}</td><td data-label="Status" class="px-6 py-4">${statusBadge}</td>
                        <td data-label="Aksi" class="px-6 py-4 flex items-center justify-end md:justify-center space-x-2 action-cell"><button type="submit" class="px-3 py-1 bg-indigo-500 text-white text-xs rounded-md hover:bg-indigo-600">Update</button>
                    </form><form action="/toggle-ban" method="POST" class="contents"><input type="hidden" name="userId" value="${user.id}">${banButton}</form></td></tr>`;
            });
            tableHTML += `</tbody></table></div>`;
            container.innerHTML = tableHTML;
        }

        function renderRankTable(users) {
            const container = document.getElementById('rank-content');
            users.sort((a, b) => b.xp - a.xp);
            let tableHTML = `<div class="overflow-x-auto"><table class="w-full text-sm text-left text-slate-300 responsive-table"><thead class="bg-white/5 text-xs uppercase text-slate-400"><tr><th class="px-6 py-3">Peringkat</th><th class="px-6 py-3">Nickname</th><th class="px-6 py-3">XP</th><th class="px-6 py-3">Tier</th></tr></thead><tbody>`;
            users.filter(u => u.role !== 'admin').slice(0, 50).forEach((user, index) => {
                let medal = '';
                if (index === 0) medal = 'ü•á'; else if (index === 1) medal = 'ü•à'; else if (index === 2) medal = 'ü•â'; else medal = `<span class="font-bold text-slate-400">${index + 1}</span>`;
                tableHTML += `<tr class="border-b border-white/10 hover:bg-white/5"><td data-label="Peringkat" class="px-6 py-4 text-xl">${medal}</td><td data-label="Nickname" class="px-6 py-4 font-medium text-white">${user.nickname}</td><td data-label="XP" class="px-6 py-4">${user.xp}</td><td data-label="Tier" class="px-6 py-4 font-semibold text-white">${user.tier}</td></tr>`;
            });
            tableHTML += `</tbody></table></div>`;
            container.innerHTML = tableHTML;
        }
        
        function renderViolationTable(violations) {
            const container = document.getElementById('violations-content');
            let tableHTML = `<h2 class="text-xl font-semibold p-4 border-b border-white/20 text-white">üö´ Log Pelanggaran</h2><div class="overflow-x-auto"><table class="w-full text-sm text-left text-slate-300 responsive-table"><thead class="bg-white/5 text-xs uppercase text-slate-400"><tr><th class="px-6 py-3">Waktu</th><th class="px-6 py-3">Tipe</th><th class="px-6 py-3">Pelaku/Pelapor</th><th class="px-6 py-3">Detail</th></tr></thead><tbody>`;
            violations.slice().reverse().forEach((v, index) => {
                let reporterInfo = v.type === 'Laporan Pengguna' ? `<div class="font-bold text-red-400">Pelapor: ${v.reporter.nickname}</div><div class="text-slate-400">Terlapor: ${v.reported.nickname}</div>` : `<div class="font-bold">${v.nickname}</div>`;
                let detailInfo = v.type === 'Laporan Pengguna' ? `<button onclick="showReportedChat(${violations.length - 1 - index})" class="text-sky-400 hover:underline">Lihat Chat</button>` : `<span class="text-rose-400">${v.message}</span>`;
                tableHTML += `<tr class="border-b border-white/10 hover:bg-white/5"><td data-label="Waktu" class="px-6 py-4 whitespace-nowrap">${v.timestamp}</td><td data-label="Tipe" class="px-6 py-4 font-semibold text-white">${v.type}</td><td data-label="Pelaku/Pelapor" class="px-6 py-4">${reporterInfo}</td><td data-label="Detail" class="px-6 py-4">${detailInfo}</td></tr>`;
            });
            tableHTML += `</tbody></table></div>`;
            container.innerHTML = tableHTML;
        }

        function renderSettingsForm(config) {
            const container = document.getElementById('settings-content');
            container.innerHTML = `<h2 class="text-2xl font-bold mb-6 border-b border-white/20 text-white">‚öôÔ∏è Pengaturan Bot</h2>
                <form action="/update-config" method="POST" class="space-y-6">
                    <div><label for="botName" class="block text-sm font-medium text-slate-300">Nama Bot</label>
                    <input type="text" name="botName" id="botName" value="${config.botName}" class="mt-1 block w-full rounded-md border-slate-600 bg-slate-700 text-white shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"></div>
                    <div><label for="geminiApiKey" class="block text-sm font-medium text-slate-300">Gemini API Key</label>
                    <input type="text" name="geminiApiKey" id="geminiApiKey" value="${config.geminiApiKey}" class="mt-1 block w-full rounded-md border-slate-600 bg-slate-700 text-white shadow-sm">
                    <p class="mt-2 text-xs text-rose-400">Peringatan: Mengubah ini akan memuat ulang koneksi AI. Hati-hati saat mengedit.</p></div>
                    <div><label for="bannedMessage" class="block text-sm font-medium text-slate-300">Pesan untuk User Banned</label>
                    <textarea name="bannedMessage" id="bannedMessage" rows="3" class="mt-1 block w-full rounded-md border-slate-600 bg-slate-700 text-white shadow-sm">${config.bannedMessage}</textarea></div>
                    <div><label for="menuReply" class="block text-sm font-medium text-slate-300">Balasan Teks !menu</label>
                    <textarea name="menuReply" id="menuReply" rows="10" class="mt-1 block w-full rounded-md border-slate-600 bg-slate-700 text-white shadow-sm">${config.replies.menu}</textarea>
                    <p class="mt-2 text-xs text-slate-400">Gunakan {nickname}, {xp}, {tier}, {botName} untuk data dinamis.</p></div>
                    <div><label for="gameMenuReply" class="block text-sm font-medium text-slate-300">Balasan Teks Menu Kuis</label>
                    <textarea name="gameMenuReply" id="gameMenuReply" rows="6" class="mt-1 block w-full rounded-md border-slate-600 bg-slate-700 text-white shadow-sm">${config.replies.gameMenu}</textarea></div>
                    <div class="pt-4"><button type="submit" class="w-full inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700">Simpan Pengaturan</button></div>
                </form>`;
        }
        
        const modal = document.getElementById('chat-modal');
        async function showChatLog(roomId) {
            document.getElementById('modal-room-id').textContent = `Isi Chat Room: ${roomId}`;
            const contentDiv = document.getElementById('modal-chat-content');
            contentDiv.innerHTML = 'Memuat chat...';
            modal.classList.remove('hidden');
            try {
                const response = await fetch(`/api/chatlog/${roomId}`);
                const logData = await response.json();
                let chatHTML = '<div class="space-y-2 text-sm">';
                logData.forEach(chat => { chatHTML += `<div><span class="font-bold text-sky-400">${chat.nickname}:</span><span class="text-slate-300"> ${chat.message}</span><span class="text-xs text-slate-500 float-right">${chat.timestamp.split(' ')[1]}</span></div>`; });
                chatHTML += '</div>';
                contentDiv.innerHTML = chatHTML;
            } catch (error) { contentDiv.innerHTML = 'Gagal memuat log chat.'; }
        }

        function showReportedChat(violationIndex) {
            const violation = cachedData.violations.slice().reverse()[violationIndex];
            document.getElementById('modal-room-id').textContent = `Bukti Laporan Room: ${violation.roomId}`;
            const contentDiv = document.getElementById('modal-chat-content');
            let chatHTML = '<div class="space-y-2 text-sm">';
            (violation.chatHistory || []).forEach(chat => {
                let colorClass = 'text-slate-300';
                if (violation.reporter && chat.userId === violation.reporter.id) colorClass = 'text-green-400';
                if (violation.reported && chat.userId === violation.reported.id) colorClass = 'text-red-400';
                chatHTML += `<div><span class="font-bold ${colorClass}">${chat.nickname}:</span> ${chat.message}</div>`;
            });
            chatHTML += '</div>';
            contentDiv.innerHTML = chatHTML;
            modal.classList.remove('hidden');
        }

        function closeModal() { modal.classList.add('hidden'); }

        async function updateAllData() {
            try {
                const [statusResponse, configResponse] = await Promise.all([ fetch('/api/status'), fetch('/api/config') ]);
                if (!statusResponse.ok || !configResponse.ok) throw new Error('Gagal mengambil data dari server.');
                const statusData = await statusResponse.json();
                const configData = await configResponse.json();
                const data = { ...statusData, config: configData };

                if (JSON.stringify(data) !== JSON.stringify(cachedData)) {
                    cachedData = data;
                    const usersArray = data.users;
                    document.getElementById('header-bot-name').textContent = `üõ°Ô∏è Admin Dashboard (${data.config.botName})`;
                    renderStatCards(data);
                    renderAnonStatus(data);
                    renderUserTable(usersArray);
                    renderRankTable(usersArray);
                    renderViolationTable(data.violations);
                    renderSettingsForm(data.config);
                }
                document.getElementById('status-text').textContent = `Data diperbarui pada: ${new Date().toLocaleTimeString('id-ID')}`;
            } catch (error) {
                console.error("Gagal update data:", error);
                document.getElementById('status-text').textContent = "Gagal memuat data.";
            }
        };
        
        updateAllData();
        setInterval(updateAllData, updateInterval);
    </script>
</body>
</html>
</html>

