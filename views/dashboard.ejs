<!DOCTYPE html>
<html lang="en" class="dark">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AnonyChat Pro Dashboard</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&display=swap');
        html { scroll-behavior: smooth; }
        body { font-family: 'Inter', sans-serif; }
        ::-webkit-scrollbar { width: 8px; }
        ::-webkit-scrollbar-track { background: #1e293b; }
        .dark ::-webkit-scrollbar-thumb { background: #4f46e5; }
        html:not(.dark) ::-webkit-scrollbar-track { background: #e2e8f0; }
        html:not(.dark) ::-webkit-scrollbar-thumb { background: #818cf8; }
        
        @keyframes fadeIn { from { opacity: 0; } to { opacity: 1; } }
        .animate-fade-in { animation: fadeIn 0.5s ease-out forwards; }

        .tab-button.active { color: #6366f1; border-color: #6366f1; }
        html:not(.dark) .tab-button.active { color: #4f46e5; border-color: #4f46e5; }

        .modal-content { transition: all 0.2s ease-out; }
        .modal.hidden .modal-content { transform: scale(0.95); opacity: 0; }
        
        /* Perbaikan untuk Tabel Responsif */
        @media (max-width: 768px) {
            .responsive-table thead { display: none; }
            .responsive-table tbody, .responsive-table tr, .responsive-table td { display: block; width: 100%; }
            .responsive-table tr { margin-bottom: 1rem; border: 1px solid #e2e8f0; border-radius: 0.75rem; overflow: hidden; }
            .dark .responsive-table tr { border-color: #334155; }
            .responsive-table td { display: flex; justify-content: space-between; align-items: center; text-align: right; padding: 0.75rem 1rem; border-bottom: 1px solid #f1f5f9; }
            .dark .responsive-table td { border-color: #334155; }
            .responsive-table td:last-child { border-bottom: none; }
            .responsive-table td::before { content: attr(data-label); font-weight: 600; text-align: left; margin-right: 1rem; }
        }
    </style>
</head>
<body class="bg-white dark:bg-slate-900 text-slate-800 dark:text-slate-300 transition-colors duration-300">
    
    <audio id="notification-sound" src="https://assets.mixkit.co/sfx/preview/mixkit-correct-answer-tone-2870.mp3" preload="auto"></audio>

    <div class="container mx-auto p-4 md:p-8">
        <header class="flex flex-wrap justify-between items-center mb-6 gap-4 animate-fade-in">
            <div>
                <h1 class="text-4xl font-extrabold text-transparent bg-clip-text bg-gradient-to-r from-blue-500 to-indigo-600">AnonyChat Pro</h1>
                <p class="text-slate-500 dark:text-slate-400 mt-1">Dashboard Administrasi Bot</p>
            </div>
            <div class="flex items-center gap-4">
                <div id="status-text" class="text-sm text-slate-500 dark:text-slate-500"></div>
                <button id="theme-toggle" class="p-2 rounded-lg bg-slate-200 dark:bg-slate-800 text-slate-600 dark:text-slate-300"></button>
            </div>
        </header>

        <div class="mb-8 border-b border-slate-200 dark:border-slate-700">
            <nav class="-mb-px flex space-x-6 overflow-x-auto" aria-label="Tabs">
                <button onclick="changeMainTab('dashboard')" class="tab-button active shrink-0 border-b-2 px-1 py-4 text-sm font-medium">Dasbor</button>
                <button onclick="changeMainTab('users')" class="tab-button shrink-0 border-transparent border-b-2 px-1 py-4 text-sm font-medium text-slate-500 dark:text-slate-400 hover:border-slate-400 dark:hover:border-slate-500">Manajemen User</button>
                <button onclick="changeMainTab('moderation')" class="tab-button shrink-0 border-transparent border-b-2 px-1 py-4 text-sm font-medium text-slate-500 dark:text-slate-400 hover:border-slate-400 dark:hover:border-slate-500">Moderasi</button>
                <button onclick="changeMainTab('analytics')" class="tab-button shrink-0 border-transparent border-b-2 px-1 py-4 text-sm font-medium text-slate-500 dark:text-slate-400 hover:border-slate-400 dark:hover:border-slate-500">Analitik</button>
                <button onclick="changeMainTab('settings')" class="tab-button shrink-0 border-transparent border-b-2 px-1 py-4 text-sm font-medium text-slate-500 dark:text-slate-400 hover:border-slate-400 dark:hover:border-slate-500">Pengaturan</button>
            </nav>
        </div>

        <main>
            <div id="dashboard-content" class="main-tab-content space-y-8">
                <div class="p-6 bg-slate-100 dark:bg-slate-800/50 border border-slate-200 dark:border-slate-700 rounded-2xl">
                    <h2 class="text-xl font-bold mb-4 text-slate-900 dark:text-slate-100">üìä Statistik Utama</h2>
                    <div id="key-metrics-container" class="grid grid-cols-2 md:grid-cols-4 gap-4"></div>
                </div>
                <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
                    <div class="lg:col-span-1 space-y-8">
                        <div class="p-6 bg-slate-100 dark:bg-slate-800/50 border border-slate-200 dark:border-slate-700 rounded-2xl">
                             <h2 class="text-xl font-bold mb-4 border-b border-slate-200 dark:border-slate-700 pb-3 text-slate-900 dark:text-slate-100">üö¶ Status Bot</h2>
                             <div class="flex items-center space-x-3 my-4"><span id="status-dot" class="h-3 w-3 rounded-full bg-gray-500"></span><span id="status-label" class="font-semibold text-lg text-slate-900 dark:text-slate-100">Inisialisasi...</span></div>
                        </div>
                        <div id="qr-code-container" class="text-center p-6 bg-slate-100 dark:bg-slate-800/50 border-2 border-dashed border-slate-300 dark:border-slate-600 rounded-2xl hidden">
                            <p class="mb-3 font-semibold text-slate-800 dark:text-slate-200">Scan QR untuk Login</p>
                            <img id="qr-code-image" src="" alt="QR Code" class="mx-auto w-full max-w-xs rounded-lg">
                        </div>
                        <div class="p-6 bg-slate-100 dark:bg-slate-800/50 border border-slate-200 dark:border-slate-700 rounded-2xl">
                            <h2 class="text-xl font-bold mb-4 border-b border-slate-200 dark:border-slate-700 pb-3 text-slate-900 dark:text-slate-100">üì£ Kirim Broadcast</h2>
                            <form id="broadcast-form" class="space-y-4">
                                <textarea id="broadcast-message" rows="4" class="w-full bg-white dark:bg-slate-900/50 border border-slate-300 dark:border-slate-600 rounded-lg p-3 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition" placeholder="Ketik pesan broadcast..."></textarea>
                                <button type="submit" id="send-broadcast-btn" class="w-full flex items-center justify-center gap-2 bg-indigo-600 text-white font-semibold py-2 px-4 rounded-lg hover:bg-indigo-700 transition-colors disabled:bg-slate-500">Kirim</button>
                                <p id="broadcast-status" class="text-center text-sm text-slate-500 dark:text-slate-400 h-4"></p>
                            </form>
                        </div>
                    </div>
                    <div id="anon-status-section" class="lg:col-span-2 p-6 bg-slate-100 dark:bg-slate-800/50 border border-slate-200 dark:border-slate-700 rounded-2xl"></div>
                </div>
            </div>
            <div id="users-content" class="main-tab-content hidden space-y-6">
                 <div class="p-6 bg-slate-100 dark:bg-slate-800/50 border border-slate-200 dark:border-slate-700 rounded-2xl">
                    <div class="flex flex-wrap justify-between items-center gap-4 mb-4">
                         <h2 class="text-xl font-bold text-slate-900 dark:text-slate-100">üë• Daftar Pengguna</h2>
                         <input type="text" id="user-search" class="w-full md:w-1/3 bg-white dark:bg-slate-900/50 border border-slate-300 dark:border-slate-600 rounded-lg p-2 text-sm" placeholder="Cari pengguna...">
                    </div>
                    <div id="user-table-container"></div>
                </div>
            </div>
            <div id="moderation-content" class="main-tab-content hidden space-y-6">
                 <div class="p-6 bg-slate-100 dark:bg-slate-800/50 border border-slate-200 dark:border-slate-700 rounded-2xl">
                     <h2 class="text-xl font-bold text-slate-900 dark:text-slate-100">üö´ Log Pelanggaran</h2>
                     <div id="violations-table-container"></div>
                 </div>
            </div>
            <div id="analytics-content" class="main-tab-content hidden space-y-8">
                 <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
                     <div class="p-6 bg-slate-100 dark:bg-slate-800/50 border border-slate-200 dark:border-slate-700 rounded-2xl">
                         <h3 class="text-lg font-bold mb-4">üìà Pertumbuhan Pengguna (30 Hari)</h3>
                         <canvas id="user-growth-chart"></canvas>
                     </div>
                     <div class="p-6 bg-slate-100 dark:bg-slate-800/50 border border-slate-200 dark:border-slate-700 rounded-2xl">
                         <h3 class="text-lg font-bold mb-4">üïí Jam Sibuk (Berdasarkan Chat)</h3>
                         <canvas id="peak-hours-chart"></canvas>
                     </div>
                 </div>
                 <div class="p-6 bg-slate-100 dark:bg-slate-800/50 border border-slate-200 dark:border-slate-700 rounded-2xl">
                    <h3 class="text-lg font-bold mb-4">‚ö†Ô∏è Tipe Pelanggaran</h3>
                    <div class="max-w-sm mx-auto">
                        <canvas id="violation-types-chart"></canvas>
                    </div>
                 </div>
            </div>
            <div id="settings-content" class="main-tab-content hidden space-y-8">
                 <div class="p-6 bg-slate-100 dark:bg-slate-800/50 border border-slate-200 dark:border-slate-700 rounded-2xl">
                     <h2 class="text-xl font-bold text-slate-900 dark:text-slate-100 mb-4">‚öôÔ∏è Pengaturan Umum</h2>
                     <form id="maintenance-form" class="flex items-center justify-between">
                         <div>
                             <h3 class="font-semibold">Mode Perbaikan</h3>
                             <p class="text-sm text-slate-500 dark:text-slate-400">Jika aktif, bot akan menolak chat baru.</p>
                         </div>
                         <label class="relative inline-flex items-center cursor-pointer">
                             <input type="checkbox" id="maintenance-toggle" class="sr-only peer">
                             <div class="w-11 h-6 bg-slate-200 dark:bg-gray-700 peer-focus:outline-none rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-indigo-600"></div>
                         </label>
                     </form>
                 </div>
                 <div class="p-6 bg-slate-100 dark:bg-slate-800/50 border border-slate-200 dark:border-slate-700 rounded-2xl">
                    <h2 class="text-xl font-bold text-slate-900 dark:text-slate-100 mb-4">üìù Editor Pesan Otomatis</h2>
                    <form id="messages-form" class="space-y-4">
                        <div>
                            <label for="welcome-message" class="block text-sm font-medium mb-1">Pesan Selamat Datang</label>
                            <textarea id="welcome-message" rows="3" class="w-full text-sm bg-white dark:bg-slate-900/50 border border-slate-300 dark:border-slate-600 rounded-lg p-2"></textarea>
                        </div>
                         <div>
                            <label for="rules-message" class="block text-sm font-medium mb-1">Pesan Aturan (!rules)</label>
                            <textarea id="rules-message" rows="3" class="w-full text-sm bg-white dark:bg-slate-900/50 border border-slate-300 dark:border-slate-600 rounded-lg p-2"></textarea>
                        </div>
                        <button type="submit" class="bg-indigo-600 text-white font-semibold py-2 px-4 rounded-lg hover:bg-indigo-700">Simpan Pesan</button>
                    </form>
                 </div>
                 <div class="p-6 bg-slate-100 dark:bg-slate-800/50 border border-slate-200 dark:border-slate-700 rounded-2xl">
                    <h2 class="text-xl font-bold text-slate-900 dark:text-slate-100 mb-4">üõë Filter Kata Terlarang</h2>
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <div>
                            <form id="add-badword-form" class="flex gap-2">
                                <input type="text" id="new-badword" class="w-full bg-white dark:bg-slate-900/50 border border-slate-300 dark:border-slate-600 rounded-lg p-2 text-sm" placeholder="Tambah kata baru...">
                                <button type="submit" class="bg-indigo-600 text-white font-semibold py-2 px-4 rounded-lg hover:bg-indigo-700">Tambah</button>
                            </form>
                        </div>
                        <div>
                            <p class="font-medium mb-2">Daftar Kata:</p>
                            <div id="badwords-list" class="h-40 overflow-y-auto bg-white dark:bg-slate-900/50 p-2 border border-slate-300 dark:border-slate-600 rounded-lg space-y-1"></div>
                        </div>
                    </div>
                 </div>
            </div>
        </main>
    </div>

    <div id="chat-modal" class="modal fixed inset-0 bg-black bg-opacity-70 flex items-center justify-center hidden z-50 p-4 backdrop-blur-sm">
        <div class="bg-white dark:bg-slate-800 border border-slate-200 dark:border-slate-700 rounded-lg shadow-xl w-full sm:w-11/12 md:w-1/2 max-h-[80vh] flex flex-col modal-content">
            <div class="p-4 border-b border-slate-200 dark:border-slate-700 flex justify-between items-center"><h2 class="text-xl font-bold" id="modal-room-id"></h2><button onclick="closeModal('chat-modal')" class="text-3xl">&times;</button></div>
            <div class="p-4 overflow-y-auto" id="modal-chat-content"></div>
        </div>
    </div>
    <div id="user-detail-modal" class="modal fixed inset-0 bg-black bg-opacity-70 flex items-center justify-center hidden z-50 p-4 backdrop-blur-sm">
        <div class="bg-white dark:bg-slate-800 border border-slate-200 dark:border-slate-700 rounded-lg shadow-xl w-full sm:w-11/12 md:w-1/2 max-h-[80vh] flex flex-col modal-content">
            <div class="p-4 border-b border-slate-200 dark:border-slate-700 flex justify-between items-center"><h2 class="text-xl font-bold" id="user-detail-name"></h2><button onclick="closeModal('user-detail-modal')" class="text-3xl">&times;</button></div>
            <div class="p-4 overflow-y-auto" id="user-detail-content"></div>
        </div>
    </div>

    <script>
    const updateInterval = 5000;
    let cachedData = {};
    let charts = {};
    const notificationSound = document.getElementById('notification-sound');
    
    const sunIcon = `<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor"><path d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 14.95a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414l-.707.707zm-2.12-10.607a1 1 0 000 1.414l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 0zM3 11a1 1 0 100-2H2a1 1 0 100 2h1z"/></svg>`;
    const moonIcon = `<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor"><path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z" /></svg>`;

    document.addEventListener('DOMContentLoaded', () => {
        initTheme();
        updateAllData();
        setInterval(updateAllData, updateInterval);
        setupEventListeners();
    });

    // --- FUNGSI NAVIGASI & TEMA ---
    function changeMainTab(tabName) {
        document.querySelectorAll('.main-tab-content').forEach(tab => tab.classList.add('hidden'));
        document.querySelectorAll('.tab-button').forEach(btn => btn.classList.remove('active'));
        document.getElementById(`${tabName}-content`).classList.remove('hidden');
        document.querySelector(`button[onclick="changeMainTab('${tabName}')"]`).classList.add('active');
    }

    function initTheme() {
        const themeToggleBtn = document.getElementById('theme-toggle');
        if (localStorage.getItem('theme') === 'light') {
            document.documentElement.classList.remove('dark');
            themeToggleBtn.innerHTML = moonIcon;
        } else {
            document.documentElement.classList.add('dark');
            themeToggleBtn.innerHTML = sunIcon;
        }
    }

    function setupEventListeners() {
        const themeToggleBtn = document.getElementById('theme-toggle');
        themeToggleBtn.addEventListener('click', () => {
            document.documentElement.classList.toggle('dark');
            const isDarkMode = document.documentElement.classList.contains('dark');
            localStorage.setItem('theme', isDarkMode ? 'dark' : 'light');
            themeToggleBtn.innerHTML = isDarkMode ? sunIcon : moonIcon;
            if(cachedData.analytics) renderAnalyticsCharts(cachedData.analytics);
        });

        document.getElementById('user-search').addEventListener('input', () => {
            renderUserTable(cachedData.users || []);
        });

        document.getElementById('broadcast-form').addEventListener('submit', async (e) => {
            e.preventDefault();
            const btn = document.getElementById('send-broadcast-btn');
            const statusEl = document.getElementById('broadcast-status');
            const message = document.getElementById('broadcast-message').value;
            if (!message) return;

            btn.disabled = true;
            statusEl.textContent = 'Mengirim...';
            try {
                const response = await fetch('/api/broadcast', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ message })
                });
                if (!response.ok) throw new Error('Gagal mengirim broadcast');
                statusEl.textContent = 'Berhasil dikirim!';
                document.getElementById('broadcast-message').value = '';
            } catch (err) {
                statusEl.textContent = 'Gagal mengirim.';
                console.error(err);
            } finally {
                btn.disabled = false;
                setTimeout(() => statusEl.textContent = '', 3000);
            }
        });

        document.getElementById('maintenance-toggle').addEventListener('change', async (e) => {
            await fetch('/api/settings/maintenance', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ enabled: e.target.checked })
            });
        });

        document.getElementById('messages-form').addEventListener('submit', async (e) => {
            e.preventDefault();
            await fetch('/api/settings/messages', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                    welcome: document.getElementById('welcome-message').value,
                    rules: document.getElementById('rules-message').value
                })
            });
            alert('Pesan berhasil disimpan!');
        });
        
        document.getElementById('add-badword-form').addEventListener('submit', async (e) => {
            e.preventDefault();
            const input = document.getElementById('new-badword');
            const word = input.value.trim();
            if(!word) return;
            await fetch('/api/settings/badwords', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ word })
            });
            input.value = '';
            updateAllData(); // Refresh data
        });
    }
    
    // --- FUNGSI UTAMA PENGAMBILAN DATA ---
    async function updateAllData() {
        try {
            const response = await fetch('/api/status');
            if (!response.ok) throw new Error('Gagal mengambil data dari server.');
            const data = await response.json();

            if (cachedData.violations && data.violations.length > cachedData.violations.length) {
                notificationSound.play().catch(e => console.log("Gagal memutar suara notifikasi."));
            }

            if (JSON.stringify(data) !== JSON.stringify(cachedData)) {
                cachedData = data;
                
                renderKeyMetrics(data.metrics);
                renderAnonStatus(data.anonChat);
                renderUserTable(data.users);
                renderViolationTable(data.violations);
                renderAnalyticsCharts(data.analytics);
                renderSettings(data.settings);
            }
            
            renderBotStatus(data.botStatus, data.qrCode);
            document.getElementById('status-text').textContent = `Diperbarui: ${new Date().toLocaleTimeString('id-ID')}`;

        } catch (error) {
            console.error("Update Gagal:", error);
            document.getElementById('status-text').textContent = "Gagal memuat data.";
            renderBotStatus('DISCONNECTED', '');
        }
    }

    // --- SEMUA FUNGSI RENDER ---
    function renderBotStatus(status, qrCode) {
        const dot = document.getElementById('status-dot');
        const label = document.getElementById('status-label');
        const qrContainer = document.getElementById('qr-code-container');
        const qrImage = document.getElementById('qr-code-image');
        dot.className = 'h-3 w-3 rounded-full';
        
        if (status === 'CONNECTED') { dot.classList.add('bg-green-500'); label.textContent = 'Terhubung'; qrContainer.classList.add('hidden'); } 
        else if (status === 'WAITING_FOR_QR_SCAN') { dot.classList.add('bg-yellow-500'); label.textContent = 'Menunggu Scan QR...'; if (qrCode) { qrImage.src = qrCode; qrContainer.classList.remove('hidden'); } } 
        else if (status === 'DISCONNECTED') { dot.classList.add('bg-red-500'); label.textContent = 'Terputus'; qrContainer.classList.add('hidden'); } 
        else { dot.classList.add('bg-gray-500'); label.textContent = 'Inisialisasi...'; qrContainer.classList.add('hidden'); }
    }

    function renderKeyMetrics(metrics) {
        const container = document.getElementById('key-metrics-container');
        if (!metrics) { container.innerHTML = 'Memuat metrik...'; return; }
        container.innerHTML = `
            <div class="p-4 bg-white dark:bg-slate-700/50 rounded-lg"><p class="text-sm text-slate-500 dark:text-slate-400">Total Pengguna</p><p class="text-2xl font-bold">${metrics.totalUsers || 0}</p></div>
            <div class="p-4 bg-white dark:bg-slate-700/50 rounded-lg"><p class="text-sm text-slate-500 dark:text-slate-400">Aktif Hari Ini</p><p class="text-2xl font-bold">${metrics.activeToday || 0}</p></div>
            <div class="p-4 bg-white dark:bg-slate-700/50 rounded-lg"><p class="text-sm text-slate-500 dark:text-slate-400">Total Chat (24h)</p><p class="text-2xl font-bold">${metrics.totalChats24h || 0}</p></div>
            <div class="p-4 bg-white dark:bg-slate-700/50 rounded-lg"><p class="text-sm text-slate-500 dark:text-slate-400">User Diblokir</p><p class="text-2xl font-bold">${metrics.banned || 0}</p></div>
        `;
    }

    function renderAnonStatus(data) {
        const container = document.getElementById('anon-status-section');
        if (!data) { container.innerHTML = 'Memuat status chat...'; return; }
        container.innerHTML = `<h2 class="text-xl font-bold mb-4 border-b border-slate-200 dark:border-slate-700 pb-3 text-slate-900 dark:text-slate-100">üíû Status Anonymous Chat</h2>
            <div class="grid md:grid-cols-2 gap-6 mt-4">
                <div><h3 class="font-bold mb-2">üë• Menunggu Partner (${data.waiting.length})</h3><div class="h-40 overflow-y-auto bg-slate-200/50 dark:bg-slate-900/50 p-3 rounded-lg border border-slate-300 dark:border-slate-700">${data.waiting.length > 0 ? data.waiting.map(u => `<div>- ${u.nickname}</div>`).join('') : '<div class="text-slate-500">Tidak ada yang menunggu...</div>'}</div></div>
                <div><h3 class="font-bold mb-2">üí¨ Room Aktif (${data.active.length})</h3><div class="h-40 overflow-y-auto bg-slate-200/50 dark:bg-slate-900/50 p-3 rounded-lg border border-slate-300 dark:border-slate-700">${data.active.length > 0 ? data.active.map(p => `<div>- <a href="#" onclick="showChatLog('${p.roomId}')" class="text-indigo-600 dark:text-indigo-400 hover:underline font-semibold">${p.roomId}</a>: ${p.user1} ‚Üî ${p.user2}</div>`).join('') : '<div class="text-slate-500">Tidak ada yang aktif...</div>'}</div></div>
            </div>`;
    }
    
    function renderUserTable(users) {
        const container = document.getElementById('user-table-container');
        if (!users) { container.innerHTML = 'Memuat daftar pengguna...'; return; }
        const searchTerm = document.getElementById('user-search').value.toLowerCase();
        const filteredUsers = users.filter(user => user.nickname.toLowerCase().includes(searchTerm) || user.id.toLowerCase().includes(searchTerm));

        let tableHTML = `<div class="overflow-x-auto"><table class="w-full text-sm text-left responsive-table"><thead class="text-xs uppercase bg-slate-100 dark:bg-slate-800"><tr><th class="px-6 py-3">Nickname</th><th class="px-6 py-3">Status</th><th class="px-6 py-3 text-center">Aksi</th></tr></thead><tbody>`;
        filteredUsers.forEach(user => {
            const isBannedClass = user.isBanned ? 'bg-rose-500/10' : '';
            const statusBadge = user.isBanned ? `<span class="px-2 py-1 text-xs font-semibold text-white bg-rose-500/80 rounded-full">Banned</span>` : `<span class="px-2 py-1 text-xs font-semibold text-white bg-teal-500/80 rounded-full">Aktif</span>`;
            tableHTML += `<tr class="border-b border-slate-200 dark:border-slate-700 hover:bg-slate-50 dark:hover:bg-slate-700/50 transition-colors ${isBannedClass}">
                <td data-label="Nickname" class="px-6 py-4 font-medium text-slate-900 dark:text-slate-200">${user.nickname}<span class="text-slate-500 dark:text-slate-500 text-xs block">${user.id.split('@')[0]}</span></td>
                <td data-label="Status" class="px-6 py-4">${statusBadge}</td>
                <td data-label="Aksi" class="px-6 py-4"><div class="flex items-center justify-center gap-2">
                    <button onclick="showUserDetail('${user.id}')" class="text-xs p-2 rounded-md bg-sky-500/20 text-sky-500 dark:text-sky-400 hover:bg-sky-500/30">Detail</button>
                    <button onclick="warnUser('${user.id}')" class="text-xs p-2 rounded-md bg-amber-500/20 text-amber-500 dark:text-amber-400 hover:bg-amber-500/30">Peringatan</button>
                    <form action="/toggle-ban" method="POST" class="contents"><input type="hidden" name="userId" value="${user.id}"><button type="submit" class="text-xs p-2 rounded-md ${user.isBanned ? 'bg-green-500/20 text-green-500 dark:text-green-400' : 'bg-rose-500/20 text-rose-500 dark:text-rose-400'}">${user.isBanned ? 'Unban' : 'Ban'}</button></form>
                </div></td></tr>`;
        });
        tableHTML += `</tbody></table></div>`;
        container.innerHTML = tableHTML;
    }

    function renderViolationTable(violations) {
        const container = document.getElementById('violations-table-container');
        if (!violations) { container.innerHTML = 'Memuat log pelanggaran...'; return; }
        let tableHTML = `<div class="overflow-x-auto"><table class="w-full text-sm text-left responsive-table"><thead class="text-xs uppercase bg-slate-100 dark:bg-slate-800"><tr><th class="px-6 py-3">Waktu</th><th class="px-6 py-3">Tipe</th><th class="px-6 py-3">Pelaku/Pelapor</th><th class="px-6 py-3">Detail</th></tr></thead><tbody>`;
        violations.slice().reverse().forEach((v, index) => {
            let reporterInfo = v.type === 'Laporan Pengguna' ? `<div class="font-bold text-rose-500 dark:text-rose-400">Pelapor: ${v.reporter.nickname}</div><div class="text-slate-500">Terlapor: ${v.reported.nickname}</div>` : `<div class="font-bold">${v.nickname}</div>`;
            let detailInfo = v.type === 'Laporan Pengguna' ? `<button onclick="showChatLog('${v.roomId}', '${v.reported.id}')" class="text-indigo-600 dark:text-indigo-400 hover:underline">Lihat Chat</button>` : `<span class="text-rose-600 dark:text-rose-400">${v.message}</span>`;
            tableHTML += `<tr class="border-b border-slate-200 dark:border-slate-700 hover:bg-slate-50 dark:hover:bg-slate-700/50"><td data-label="Waktu" class="px-6 py-4 whitespace-nowrap">${v.timestamp}</td><td data-label="Tipe" class="px-6 py-4 font-semibold">${v.type}</td><td data-label="Pelaku/Pelapor" class="px-6 py-4">${reporterInfo}</td><td data-label="Detail" class="px-6 py-4">${detailInfo}</td></tr>`;
        });
        tableHTML += `</tbody></table></div>`;
        container.innerHTML = tableHTML;
    }

    function renderAnalyticsCharts(analytics) {
        if (!analytics) return;
        Object.values(charts).forEach(chart => chart.destroy());
        const isDarkMode = document.documentElement.classList.contains('dark');
        const textColor = isDarkMode ? '#cbd5e1' : '#475569';
        const gridColor = isDarkMode ? '#334155' : '#e2e8f0';
        const chartOptions = {
             plugins: { legend: { labels: { color: textColor } } },
             scales: { x: { ticks: { color: textColor }, grid: { color: gridColor } }, y: { ticks: { color: textColor }, grid: { color: gridColor } } }
        };

        const ugCtx = document.getElementById('user-growth-chart').getContext('2d');
        charts.userGrowth = new Chart(ugCtx, { type: 'line', data: { labels: analytics.userGrowth.labels, datasets: [{ label: 'Pengguna Baru', data: analytics.userGrowth.data, borderColor: '#6366f1', backgroundColor: 'rgba(99, 102, 241, 0.2)', fill: true, tension: 0.1 }] }, options: chartOptions });

        const phCtx = document.getElementById('peak-hours-chart').getContext('2d');
        charts.peakHours = new Chart(phCtx, { type: 'bar', data: { labels: analytics.peakHours.labels, datasets: [{ label: 'Jumlah Chat', data: analytics.peakHours.data, backgroundColor: '#818cf8' }] }, options: chartOptions });
        
        const vtCtx = document.getElementById('violation-types-chart').getContext('2d');
        charts.violationTypes = new Chart(vtCtx, { type: 'doughnut', data: { labels: analytics.violationTypes.labels, datasets: [{ data: analytics.violationTypes.data, backgroundColor: ['#ef4444', '#f97316', '#eab308'], hoverOffset: 4 }] }, options: { plugins: { legend: { labels: { color: textColor } } }} });
    }

    function renderSettings(settings) {
        if(!settings) return;
        document.getElementById('maintenance-toggle').checked = settings.maintenanceMode;
        document.getElementById('welcome-message').value = settings.messages.welcome;
        document.getElementById('rules-message').value = settings.messages.rules;
        const listContainer = document.getElementById('badwords-list');
        listContainer.innerHTML = settings.badwords.map(word => `<div class="flex justify-between items-center bg-slate-200 dark:bg-slate-800/80 p-2 rounded text-sm"><span>${word}</span><button onclick="deleteBadword('${word}')" class="text-red-500 font-bold hover:text-red-700">√ó</button></div>`).join('');
    }

    // --- FUNGSI AKSI & MODAL ---
    async function deleteBadword(word) {
        if (!confirm(`Yakin ingin menghapus kata "${word}"?`)) return;
        await fetch('/api/settings/badwords', {
            method: 'DELETE',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ word })
        });
        updateAllData(); // Refresh data
    }
    
    async function warnUser(userId) {
        if (!confirm(`Kirim peringatan ke pengguna ini?`)) return;
        await fetch('/api/warn-user', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ userId })
        });
        alert('Peringatan terkirim.');
    }

    function closeModal(modalId) {
        document.getElementById(modalId).classList.add('hidden');
    }
    
    async function showChatLog(roomId, highlightedUserId = null) {
        const modal = document.getElementById('chat-modal');
        const contentEl = document.getElementById('modal-chat-content');
        document.getElementById('modal-room-id').textContent = `Log Chat: ${roomId}`;
        modal.classList.remove('hidden');
        contentEl.innerHTML = 'Memuat log...';

        try {
            const response = await fetch(`/api/chat-log/${roomId}`);
            const logs = await response.json();
            if(!logs || logs.length === 0) {
                contentEl.innerHTML = 'Log chat tidak ditemukan atau kosong.';
                return;
            }
            contentEl.innerHTML = logs.map(log => {
                const isReported = highlightedUserId && log.senderId === highlightedUserId;
                const alignment = log.senderNickname === 'BOT' ? 'text-center' : (log.isSender1 ? 'text-left' : 'text-right');
                const bgColor = isReported ? 'bg-rose-500/20' : 'bg-slate-200 dark:bg-slate-700';
                return `<div class="mb-2 ${alignment}">
                    <div class="inline-block p-2 rounded-lg ${bgColor}">
                        <div class="font-bold text-sm">${log.senderNickname}</div>
                        <div>${log.message}</div>
                        <div class="text-xs text-slate-500 dark:text-slate-400">${log.timestamp}</div>
                    </div>
                </div>`;
            }).join('');
        } catch(err) {
            contentEl.innerHTML = 'Gagal memuat log chat.';
            console.error(err);
        }
    }

    async function showUserDetail(userId) {
        const modal = document.getElementById('user-detail-modal');
        const contentEl = document.getElementById('user-detail-content');
        modal.classList.remove('hidden');
        contentEl.innerHTML = 'Memuat detail pengguna...';
        
        try {
            const response = await fetch(`/api/user-detail/${userId}`);
            const user = await response.json();
            document.getElementById('user-detail-name').textContent = user.nickname;
            contentEl.innerHTML = `
                <div class="space-y-2 text-sm">
                    <p><strong>ID:</strong> ${user.id}</p>
                    <p><strong>Status:</strong> ${user.isBanned ? 'Banned' : 'Aktif'}</p>
                    <p><strong>Jumlah Peringatan:</strong> ${user.warnings}</p>
                    <p><strong>Bergabung Pada:</strong> ${new Date(user.joinedAt).toLocaleString('id-ID')}</p>
                    <p><strong>Terakhir Aktif:</strong> ${new Date(user.lastActive).toLocaleString('id-ID')}</p>
                </div>
            `;
        } catch(err) {
            contentEl.innerHTML = 'Gagal memuat detail pengguna.';
            console.error(err);
        }
    }
    </script>
</body>
</html>
