<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bot Admin Dashboard</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        @media (max-width: 768px) {
            .responsive-table thead {
                display: none;
            }
            .responsive-table tbody, .responsive-table tr, .responsive-table td {
                display: block;
                width: 100%;
            }
            .responsive-table tr {
                margin-bottom: 1rem;
                border: 1px solid #e2e8f0;
                border-radius: 0.75rem;
                overflow: hidden;
                box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px -1px rgba(0, 0, 0, 0.1);
            }
            .responsive-table td {
                display: flex;
                justify-content: space-between;
                align-items: center;
                text-align: right;
                padding: 0.75rem 1rem;
                border-bottom: 1px solid #edf2f7;
            }
            .responsive-table td::before {
                content: attr(data-label);
                font-weight: 600;
                text-align: left;
                margin-right: 1rem;
                color: #4a5568;
            }
            .responsive-table td:last-child {
                border-bottom: 0;
            }
            .responsive-table .action-cell {
                justify-content: center;
                padding-top: 1rem;
                padding-bottom: 1rem;
            }
        }
    </style>
</head>
<body class="bg-slate-100 text-slate-800">

    <div class="container mx-auto p-4 md:p-8">
        <header class="flex flex-wrap justify-between items-center mb-8 gap-4">
            <div>
                <h1 class="text-3xl font-bold text-slate-800" id="header-bot-name">üõ°Ô∏è Admin Dashboard</h1>
                <p class="text-slate-500">Panel kontrol real-time untuk bot Anda.</p>
            </div>
            <div class="text-sm text-slate-500" id="status-text">Menunggu update...</div>
        </header>

        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6 mb-8" id="stat-cards-container">
            </div>

        <div id="anon-status-section" class="mb-8 p-6 bg-white rounded-xl shadow-lg">
            </div>

        <div>
            <div class="mb-4 border-b border-gray-200">
                <nav class="-mb-px flex space-x-4 sm:space-x-8 overflow-x-auto" aria-label="Tabs">
                    <button onclick="changeTab('users')" class="tab-button border-indigo-500 text-indigo-600 whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm">Manajemen User</button>
                    <button onclick="changeTab('rank')" class="tab-button border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm">Peringkat</button>
                    <button onclick="changeTab('violations')" class="tab-button border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm">Log Pelanggaran</button>
                    <button onclick="changeTab('settings')" class="tab-button border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm">Pengaturan Bot</button>
                </nav>
            </div>

            <div id="users-content" class="tab-content bg-white rounded-lg shadow-lg overflow-hidden"></div>
            <div id="rank-content" class="tab-content bg-white rounded-lg shadow-lg overflow-hidden hidden"></div>
            <div id="violations-content" class="tab-content bg-white rounded-lg shadow-lg overflow-hidden hidden"></div>
            <div id="settings-content" class="tab-content bg-white rounded-lg shadow-lg p-6 hidden"></div>
        </div>
    </div>

    <div id="chat-modal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center hidden z-50 p-4">
        <div class="bg-white rounded-lg shadow-xl w-full sm:w-11/12 md:w-1/2 max-h-[80vh] flex flex-col">
            <div class="p-4 border-b flex justify-between items-center">
                <h2 class="text-xl font-bold" id="modal-room-id"></h2>
                <button onclick="closeModal()" class="text-gray-500 hover:text-gray-800 text-3xl">&times;</button>
            </div>
            <div class="p-4 overflow-y-auto" id="modal-chat-content"></div>
        </div>
    </div>

    <script>
        const updateInterval = 1000;
        let cachedData = {};

        function changeTab(tabName) {
            ['users', 'rank', 'violations', 'settings'].forEach(tab => {
                document.getElementById(`${tab}-content`).classList.add('hidden');
                const button = document.querySelector(`button[onclick="changeTab('${tab}')"]`);
                button.classList.remove('border-indigo-500', 'text-indigo-600');
                button.classList.add('border-transparent', 'text-gray-500');
            });
            document.getElementById(`${tabName}-content`).classList.remove('hidden');
            document.querySelector(`button[onclick="changeTab('${tabName}')"]`).classList.add('border-indigo-500', 'text-indigo-600');
        }

        // --- Fungsi-fungsi Render (Mengisi data ke HTML) ---

        function renderStatCards(data) {
            const container = document.getElementById('stat-cards-container');
            container.innerHTML = `
                <div class="bg-white p-6 rounded-xl shadow-lg flex items-center space-x-4 transition-all hover:shadow-xl hover:scale-105"><div class="bg-blue-100 p-3 rounded-full"><svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-blue-600" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z" /></svg></div><div><p class="text-sm text-slate-500">Total Pengguna</p><p class="text-2xl font-bold">${data.users.length}</p></div></div>
                <div class="bg-white p-6 rounded-xl shadow-lg flex items-center space-x-4 transition-all hover:shadow-xl hover:scale-105"><div class="bg-teal-100 p-3 rounded-full"><svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-teal-600" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 5.523-4.477 10-10 10S1 17.523 1 12S5.477 2 11 2s10 4.477 10 10z" /></svg></div><div><p class="text-sm text-slate-500">Dalam Antrian</p><p class="text-2xl font-bold">${data.waiting.length}</p></div></div>
                <div class="bg-white p-6 rounded-xl shadow-lg flex items-center space-x-4 transition-all hover:shadow-xl hover:scale-105"><div class="bg-indigo-100 p-3 rounded-full"><svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-indigo-600" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8h2a2 2 0 012 2v6a2 2 0 01-2 2h-2v4l-4-4H9a2 2 0 01-2-2V7a2 2 0 012-2h2m8-4H5a2 2 0 00-2 2v10a2 2 0 002 2h11l4 4V7a2 2 0 00-2-2z" /></svg></div><div><p class="text-sm text-slate-500">Room Aktif</p><p class="text-2xl font-bold">${data.active.length}</p></div></div>
                <div class="bg-white p-6 rounded-xl shadow-lg flex items-center space-x-4 transition-all hover:shadow-xl hover:scale-105"><div class="bg-rose-100 p-3 rounded-full"><svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-rose-600" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728A9 9 0 015.636 5.636m12.728 12.728L5.636 5.636" /></svg></div><div><p class="text-sm text-slate-500">Total Pelanggaran</p><p class="text-2xl font-bold">${data.violations.length}</p></div></div>`;
        }

        function renderAnonStatus(data) {
            const container = document.getElementById('anon-status-section');
            let statusHTML = `<h2 class="text-xl font-semibold mb-4 border-b pb-2">üíû Status Anonymous Chat</h2>
                <div class="grid md:grid-cols-2 gap-6">
                    <div><h3 class="font-bold mb-2">üë• Menunggu Partner (${data.waiting.length})</h3><div class="text-gray-600 h-32 overflow-y-auto bg-gray-50 p-3 rounded-lg">${data.waiting.length > 0 ? data.waiting.map(u => `<div>- ${u.nickname}</div>`).join('') : '<div class="text-gray-400">Tidak ada yang menunggu...</div>'}</div></div>
                    <div><h3 class="font-bold mb-2">üí¨ Room Aktif (${data.active.length})</h3><div class="text-gray-600 h-32 overflow-y-auto bg-gray-50 p-3 rounded-lg">${data.active.length > 0 ? data.active.map(p => `<div>- <a href="#" onclick="showChatLog('${p.roomId}')" class="text-blue-500 hover:underline font-semibold">${p.roomId}</a>: ${p.user1} ‚Üî ${p.user2}</div>`).join('') : '<div class="text-gray-400">Tidak ada yang aktif...</div>'}</div></div>
                </div>`;
            container.innerHTML = statusHTML;
        }

        function renderUserTable(users) {
            const container = document.getElementById('users-content');
            let tableHTML = `<div class="overflow-x-auto"><table class="w-full text-sm text-left text-gray-500 responsive-table">
                <thead class="bg-gray-50 text-xs uppercase text-gray-700"><tr><th class="px-6 py-3">Nickname</th><th class="px-6 py-3">XP</th><th class="px-6 py-3">Tier</th><th class="px-6 py-3">Status</th><th class="px-6 py-3 text-center">Aksi</th></tr></thead><tbody>`;
            users.forEach(user => {
                const isBannedClass = user.isBanned ? 'bg-rose-50' : '';
                const statusBadge = user.isBanned ? `<span class="px-2 py-1 text-xs font-semibold text-white bg-rose-500 rounded-full">Banned</span>` : `<span class="px-2 py-1 text-xs font-semibold text-white bg-teal-500 rounded-full">Aktif</span>`;
                const banButton = user.isBanned ? `<button type="submit" class="px-3 py-1 bg-sky-500 text-white text-xs rounded-md hover:bg-sky-600">Unban</button>` : `<button type="submit" class="px-3 py-1 bg-rose-500 text-white text-xs rounded-md hover:bg-rose-600">Ban</button>`;
                tableHTML += `<tr class="border-b hover:bg-gray-50 ${isBannedClass}"><td data-label="Nickname" class="px-6 py-4 font-medium text-gray-900">${user.nickname}<span class="text-gray-500 text-xs block">${user.id.split('@')[0]}</span></td>
                    <form action="/update-user" method="POST" class="contents"><input type="hidden" name="userId" value="${user.id}">
                        <td data-label="XP" class="px-6 py-4"><input type="number" name="xp" value="${user.xp}" class="w-20 p-1 border rounded bg-gray-50"></td>
                        <td data-label="Tier" class="px-6 py-4 font-semibold text-gray-900">${user.tier}</td><td data-label="Status" class="px-6 py-4">${statusBadge}</td>
                        <td data-label="Aksi" class="px-6 py-4 flex items-center justify-end md:justify-center space-x-2 action-cell"><button type="submit" class="px-3 py-1 bg-indigo-500 text-white text-xs rounded-md hover:bg-indigo-600">Update</button>
                    </form><form action="/toggle-ban" method="POST" class="contents"><input type="hidden" name="userId" value="${user.id}">${banButton}</form></td></tr>`;
            });
            tableHTML += `</tbody></table></div>`;
            container.innerHTML = tableHTML;
        }

        function renderRankTable(users) {
            const container = document.getElementById('rank-content');
            users.sort((a, b) => b.xp - a.xp);
            let tableHTML = `<div class="overflow-x-auto"><table class="w-full text-sm text-left text-gray-500 responsive-table">
                <thead class="bg-gray-50 text-xs uppercase text-gray-700"><tr><th class="px-6 py-3">Peringkat</th><th class="px-6 py-3">Nickname</th><th class="px-6 py-3">XP</th><th class="px-6 py-3">Tier</th></tr></thead><tbody>`;
            users.filter(u => u.role !== 'admin').slice(0, 50).forEach((user, index) => {
                let medal = '';
                if (index === 0) medal = 'ü•á'; else if (index === 1) medal = 'ü•à'; else if (index === 2) medal = 'ü•â'; else medal = `<span class="font-bold">${index + 1}</span>`;
                tableHTML += `<tr class="border-b hover:bg-gray-50"><td data-label="Peringkat" class="px-6 py-4 text-xl">${medal}</td><td data-label="Nickname" class="px-6 py-4 font-medium text-gray-900">${user.nickname}</td><td data-label="XP" class="px-6 py-4">${user.xp}</td><td data-label="Tier" class="px-6 py-4 font-semibold text-gray-900">${user.tier}</td></tr>`;
            });
            tableHTML += `</tbody></table></div>`;
            container.innerHTML = tableHTML;
        }
        
        function renderViolationTable(violations) {
            const container = document.getElementById('violations-content');
            let tableHTML = `<h2 class="text-xl font-semibold p-4 border-b">üö´ Log Pelanggaran</h2><div class="overflow-x-auto"><table class="w-full text-sm text-left text-gray-500 responsive-table">
                <thead class="bg-gray-50 text-xs uppercase text-gray-700"><tr><th class="px-6 py-3">Waktu</th><th class="px-6 py-3">Tipe</th><th class="px-6 py-3">Pelaku/Pelapor</th><th class="px-6 py-3">Detail</th></tr></thead><tbody>`;
            violations.slice().reverse().forEach((v, index) => {
                let reporterInfo = v.type === 'Laporan Pengguna' ? `<div class="font-bold text-red-600">Pelapor: ${v.reporter.nickname}</div><div class="text-gray-500">Terlapor: ${v.reported.nickname}</div>` : `<div class="font-bold">${v.nickname}</div>`;
                let detailInfo = v.type === 'Laporan Pengguna' ? `<button onclick="showReportedChat(${violations.length - 1 - index})" class="text-blue-500 hover:underline">Lihat Chat</button>` : `<span class="text-red-600">${v.message}</span>`;
                tableHTML += `<tr class="border-b hover:bg-gray-50"><td data-label="Waktu" class="px-6 py-4 text-gray-500 whitespace-nowrap">${v.timestamp}</td>
                    <td data-label="Tipe" class="px-6 py-4 font-semibold">${v.type}</td>
                    <td data-label="Pelaku/Pelapor" class="px-6 py-4">${reporterInfo}</td>
                    <td data-label="Detail" class="px-6 py-4">${detailInfo}</td></tr>`;
            });
            tableHTML += `</tbody></table></div>`;
            container.innerHTML = tableHTML;
        }

        function renderSettingsForm(config) {
            const container = document.getElementById('settings-content');
            container.innerHTML = `<h2 class="text-2xl font-bold mb-6 border-b pb-4">‚öôÔ∏è Pengaturan Bot</h2>
                <form action="/update-config" method="POST" class="space-y-6">
                    <div><label for="botName" class="block text-sm font-medium text-gray-700">Nama Bot</label>
                    <input type="text" name="botName" id="botName" value="${config.botName}" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"></div>
                    <div><label for="geminiApiKey" class="block text-sm font-medium text-gray-700">Gemini API Key</label>
                    <input type="text" name="geminiApiKey" id="geminiApiKey" value="${config.geminiApiKey}" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm">
                    <p class="mt-2 text-xs text-red-600">Peringatan: Mengubah ini akan memuat ulang koneksi AI. Hati-hati saat mengedit.</p></div>
                    <div><label for="bannedMessage" class="block text-sm font-medium text-gray-700">Pesan untuk User Banned</label>
                    <textarea name="bannedMessage" id="bannedMessage" rows="3" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm">${config.bannedMessage}</textarea></div>
                    <div><label for="menuReply" class="block text-sm font-medium text-gray-700">Balasan Teks !menu</label>
                    <textarea name="menuReply" id="menuReply" rows="10" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm">${config.replies.menu}</textarea>
                    <p class="mt-2 text-xs text-gray-500">Gunakan {nickname}, {xp}, {tier}, {botName} untuk data dinamis.</p></div>
                    <div><label for="gameMenuReply" class="block text-sm font-medium text-gray-700">Balasan Teks Menu Kuis</label>
                    <textarea name="gameMenuReply" id="gameMenuReply" rows="6" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm">${config.replies.gameMenu}</textarea></div>
                    <div class="pt-4"><button type="submit" class="w-full inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700">Simpan Pengaturan</button></div>
                </form>`;
        }
        
        const modal = document.getElementById('chat-modal');
        async function showChatLog(roomId) {
            document.getElementById('modal-room-id').textContent = `Isi Chat Room: ${roomId}`;
            const contentDiv = document.getElementById('modal-chat-content');
            contentDiv.innerHTML = 'Memuat chat...';
            modal.classList.remove('hidden');
            try {
                const response = await fetch(`/api/chatlog/${roomId}`);
                const logData = await response.json();
                let chatHTML = '<div class="space-y-2">';
                logData.forEach(chat => { chatHTML += `<div><span class="font-bold text-blue-600">${chat.nickname}:</span> ${chat.message} <span class="text-xs text-gray-400 float-right">${chat.timestamp.split(' ')[1]}</span></div>`; });
                chatHTML += '</div>';
                contentDiv.innerHTML = chatHTML;
            } catch (error) { contentDiv.innerHTML = 'Gagal memuat log chat.'; }
        }

        function showReportedChat(violationIndex) {
            const violation = cachedData.violations.slice().reverse()[violationIndex];
            document.getElementById('modal-room-id').textContent = `Bukti Laporan Room: ${violation.roomId}`;
            const contentDiv = document.getElementById('modal-chat-content');
            let chatHTML = '<div class="space-y-2">';
            (violation.chatHistory || []).forEach(chat => {
                let colorClass = 'text-gray-800';
                if (violation.reporter && chat.userId === violation.reporter.id) colorClass = 'text-green-600';
                if (violation.reported && chat.userId === violation.reported.id) colorClass = 'text-red-600';
                chatHTML += `<div><span class="font-bold ${colorClass}">${chat.nickname}:</span> ${chat.message}</div>`;
            });
            chatHTML += '</div>';
            contentDiv.innerHTML = chatHTML;
            modal.classList.remove('hidden');
        }

        function closeModal() { modal.classList.add('hidden'); }

        async function updateAllData() {
            try {
                const [statusResponse, configResponse] = await Promise.all([ fetch('/api/status'), fetch('/api/config') ]);
                if (!statusResponse.ok || !configResponse.ok) throw new Error('Gagal mengambil data dari server.');

                const statusData = await statusResponse.json();
                const configData = await configResponse.json();
                const data = { ...statusData, config: configData };

                if (JSON.stringify(data) !== JSON.stringify(cachedData)) {
                    cachedData = data;
                    const usersArray = data.users;
                    document.getElementById('header-bot-name').textContent = `üõ°Ô∏è Admin Dashboard (${data.config.botName})`;
                    renderStatCards(data);
                    renderAnonStatus(data);
                    renderUserTable(usersArray);
                    renderRankTable(usersArray);
                    renderViolationTable(data.violations);
                    renderSettingsForm(data.config);
                }
                document.getElementById('status-text').textContent = `Data diperbarui pada: ${new Date().toLocaleTimeString('id-ID')}`;
            } catch (error) {
                console.error("Gagal update data:", error);
                document.getElementById('status-text').textContent = "Gagal memuat data.";
            }
        };
        
        updateAllData();
        setInterval(updateAllData, updateInterval);
    </script>
</body>
</html>